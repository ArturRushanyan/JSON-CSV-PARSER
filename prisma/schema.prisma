// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  Pending
  Active
  Deleted
}

model User {
  id                   Int                 @id @default(autoincrement())
  email                String              @unique
  apiKey               String              @unique
  requestCount         Int
  allowedIps           String[]
  status               UserStatus          @default(Pending)
  subscriptionLimits   SubscriptionLimits? @relation(fields: [subscriptionLimitsId], references: [id])
  subscriptionLimitsId Int?
  userSecrets          UserSecrets?        @relation(fields: [userSecretsId], references: [id])
  userSecretsId        Int?                @unique
}

model UserSecrets {
  id        Int      @id @default(autoincrement())
  secretKey String   @unique @default(uuid())
  user      User?    @relation
  createdAt DateTime @default(now())
}

model SubscriptionLimits {
  id           Int     @id @default(autoincrement())
  price        Decimal @db.Money
  requestLimit Int
  name         String
  User         User[]
}

enum AccountsStatus {
  Active
  Deleted
}

model Accounts {
  id        Int            @id @default(autoincrement())
  email     String         @db.VarChar(255)
  password  String         @db.VarChar(255)
  firstName String         @db.VarChar(255)
  lastName  String         @db.VarChar(255)
  status    AccountsStatus @default(Active)
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}
